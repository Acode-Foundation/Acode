name: Build the app
on:
  - push

jobs:
  build:
    name: Build the app
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    
    - run: npm install
    
    - run: webpack 
    
    - name: Update package list
      run: sudo apt update
    
    - name: Install gradle
      run: sudo apt install gradle
    
    - name: Install jq
      run: sudo apt install jq
      
    - name: Save revision and branch
      run: |
        echo "::set-env name=SHORT_REV::$(git rev-parse --short HEAD)"
        echo "::set-env name=LONG_REV::$(git rev-parse HEAD)"
        echo "::set-env name=BRANCH::$(sed 's/-/_/g' <<< `git rev-parse --abbrev-ref HEAD`)"
        
    - name: Install cordova
      run: |
        sudo npm config set unsafe-perm true && \
        sudo npm install -g cordova
    
    - name: Setup build type
      run: echo "::set-env name=BUILD_TYPE::$BUILD_TYPE"
      env:
        BUILD_TYPE: release
    
    - name: Add platform android
      run: cordova platform add android
    
    - name: Save keystore
      env:
        keystore_encoded: ${{ secrets.KEYSTORE_ENCODED }}
      run: |-
        base64 -d <<< "$keystore_encoded" > platforms/android/acode.keystore
    
    - name: Save properties
      env:
        signing_properties: ${{ secrets.SIGNING_PROPERTIES }}
      run: echo "$signing_properties" > platforms/android/release-signing.properties
    
    - name: Build with cordova
      run: cordova build android --${BUILD_TYPE} && rm platforms/android/{*.keystore,release-signing.properties}
    
    - name: Create env variable APP_VERSION
      run: echo "::set-env name=APP_VERSION::$(cat package.json | jq -r '.version')"
    
    - name: Create env variable APP_NAME
      run: echo "::set-env name=APP_NAME::acode-${BUILD_TYPE}-${SHORT_REV}.apk"
      
    
    - name: Rename apk to APP_NAME
      run: mv platforms/android/app/build/outputs/apk/${BUILD_TYPE}/app-${BUILD_TYPE}.apk ${APP_NAME}
        
    - name: Upload apk
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.APP_NAME }}
        path: ${{ env.APP_NAME }}
        
    
    - name: Send apk to Telegram
      env:
        chat_id: ${{ secrets.CHAT_ID }}
        bot_token: ${{ secrets.BOT_TOKEN }}
      run: |-
        curl -F "chat_id=${chat_id}" -F 'parse_mode=Markdown' -F caption="$(TZ=UTC git log -1 --format='%s

        Commit [%h](https://github.com/deadlyjack/code-editor/commit/%H) #'${BRANCH}'
        Date: %cd
        
        %b' --date='format-local:%a %b %d %Y %T (%z)' | sed 's/[*_`]/\\\0/g')" -F document="@${APP_NAME}" -X POST https://api.telegram.org/bot${bot_token}/sendDocument
